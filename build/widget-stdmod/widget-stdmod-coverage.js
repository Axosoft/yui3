if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/widget-stdmod/widget-stdmod.js']) {
   __coverage__['build/widget-stdmod/widget-stdmod.js'] = {"path":"build/widget-stdmod/widget-stdmod.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":25},"end":{"line":1,"column":44}}},"2":{"name":"StdMod","line":62,"loc":{"start":{"line":62,"column":4},"end":{"line":62,"column":28}}},"3":{"name":"(anonymous_3)","line":187,"loc":{"start":{"line":187,"column":23},"end":{"line":187,"column":37}}},"4":{"name":"(anonymous_4)","line":201,"loc":{"start":{"line":201,"column":23},"end":{"line":201,"column":44}}},"5":{"name":"(anonymous_5)","line":205,"loc":{"start":{"line":205,"column":21},"end":{"line":205,"column":42}}},"6":{"name":"(anonymous_6)","line":209,"loc":{"start":{"line":209,"column":24},"end":{"line":209,"column":45}}},"7":{"name":"(anonymous_7)","line":252,"loc":{"start":{"line":252,"column":22},"end":{"line":252,"column":33}}},"8":{"name":"(anonymous_8)","line":269,"loc":{"start":{"line":269,"column":24},"end":{"line":269,"column":35}}},"9":{"name":"(anonymous_9)","line":296,"loc":{"start":{"line":296,"column":26},"end":{"line":296,"column":37}}},"10":{"name":"(anonymous_10)","line":307,"loc":{"start":{"line":307,"column":32},"end":{"line":307,"column":43}}},"11":{"name":"(anonymous_11)","line":323,"loc":{"start":{"line":323,"column":24},"end":{"line":323,"column":35}}},"12":{"name":"(anonymous_12)","line":341,"loc":{"start":{"line":341,"column":29},"end":{"line":341,"column":41}}},"13":{"name":"(anonymous_13)","line":355,"loc":{"start":{"line":355,"column":27},"end":{"line":355,"column":39}}},"14":{"name":"(anonymous_14)","line":369,"loc":{"start":{"line":369,"column":29},"end":{"line":369,"column":41}}},"15":{"name":"(anonymous_15)","line":383,"loc":{"start":{"line":383,"column":32},"end":{"line":383,"column":45}}},"16":{"name":"(anonymous_16)","line":397,"loc":{"start":{"line":397,"column":30},"end":{"line":397,"column":44}}},"17":{"name":"(anonymous_17)","line":410,"loc":{"start":{"line":410,"column":27},"end":{"line":410,"column":49}}},"18":{"name":"(anonymous_18)","line":433,"loc":{"start":{"line":433,"column":22},"end":{"line":433,"column":33}}},"19":{"name":"(anonymous_19)","line":455,"loc":{"start":{"line":455,"column":23},"end":{"line":455,"column":57}}},"20":{"name":"(anonymous_20)","line":477,"loc":{"start":{"line":477,"column":24},"end":{"line":477,"column":42}}},"21":{"name":"(anonymous_21)","line":499,"loc":{"start":{"line":499,"column":23},"end":{"line":499,"column":41}}},"22":{"name":"(anonymous_22)","line":516,"loc":{"start":{"line":516,"column":31},"end":{"line":516,"column":74}}},"23":{"name":"(anonymous_23)","line":544,"loc":{"start":{"line":544,"column":29},"end":{"line":544,"column":47}}},"24":{"name":"(anonymous_24)","line":561,"loc":{"start":{"line":561,"column":28},"end":{"line":561,"column":60}}},"25":{"name":"(anonymous_25)","line":587,"loc":{"start":{"line":587,"column":28},"end":{"line":587,"column":43}}},"26":{"name":"(anonymous_26)","line":610,"loc":{"start":{"line":610,"column":28},"end":{"line":610,"column":46}}},"27":{"name":"(anonymous_27)","line":623,"loc":{"start":{"line":623,"column":27},"end":{"line":623,"column":45}}},"28":{"name":"(anonymous_28)","line":650,"loc":{"start":{"line":650,"column":35},"end":{"line":650,"column":66}}},"29":{"name":"(anonymous_29)","line":667,"loc":{"start":{"line":667,"column":28},"end":{"line":667,"column":46}}},"30":{"name":"(anonymous_30)","line":683,"loc":{"start":{"line":683,"column":27},"end":{"line":683,"column":61}}},"31":{"name":"(anonymous_31)","line":705,"loc":{"start":{"line":705,"column":24},"end":{"line":705,"column":55}}},"32":{"name":"(anonymous_32)","line":732,"loc":{"start":{"line":732,"column":21},"end":{"line":732,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":780,"column":56}},"2":{"start":{"line":8,"column":4},"end":{"line":49,"column":29}},"3":{"start":{"line":62,"column":4},"end":{"line":62,"column":30}},"4":{"start":{"line":71,"column":4},"end":{"line":71,"column":27}},"5":{"start":{"line":80,"column":4},"end":{"line":80,"column":23}},"6":{"start":{"line":89,"column":4},"end":{"line":89,"column":27}},"7":{"start":{"line":101,"column":4},"end":{"line":101,"column":27}},"8":{"start":{"line":113,"column":4},"end":{"line":113,"column":29}},"9":{"start":{"line":124,"column":4},"end":{"line":124,"column":31}},"10":{"start":{"line":126,"column":4},"end":{"line":132,"column":49}},"11":{"start":{"line":142,"column":4},"end":{"line":191,"column":6}},"12":{"start":{"line":188,"column":17},"end":{"line":188,"column":54}},"13":{"start":{"line":200,"column":4},"end":{"line":212,"column":6}},"14":{"start":{"line":202,"column":12},"end":{"line":202,"column":53}},"15":{"start":{"line":206,"column":12},"end":{"line":206,"column":51}},"16":{"start":{"line":210,"column":12},"end":{"line":210,"column":53}},"17":{"start":{"line":223,"column":4},"end":{"line":227,"column":6}},"18":{"start":{"line":244,"column":4},"end":{"line":248,"column":6}},"19":{"start":{"line":250,"column":4},"end":{"line":775,"column":6}},"20":{"start":{"line":253,"column":12},"end":{"line":253,"column":53}},"21":{"start":{"line":255,"column":12},"end":{"line":255,"column":59}},"22":{"start":{"line":256,"column":12},"end":{"line":256,"column":55}},"23":{"start":{"line":257,"column":12},"end":{"line":257,"column":55}},"24":{"start":{"line":270,"column":12},"end":{"line":270,"column":50}},"25":{"start":{"line":272,"column":12},"end":{"line":274,"column":13}},"26":{"start":{"line":273,"column":16},"end":{"line":273,"column":72}},"27":{"start":{"line":276,"column":12},"end":{"line":278,"column":13}},"28":{"start":{"line":277,"column":16},"end":{"line":277,"column":68}},"29":{"start":{"line":280,"column":12},"end":{"line":282,"column":13}},"30":{"start":{"line":281,"column":16},"end":{"line":281,"column":72}},"31":{"start":{"line":284,"column":12},"end":{"line":284,"column":57}},"32":{"start":{"line":297,"column":12},"end":{"line":297,"column":67}},"33":{"start":{"line":298,"column":12},"end":{"line":298,"column":41}},"34":{"start":{"line":302,"column":12},"end":{"line":302,"column":62}},"35":{"start":{"line":303,"column":12},"end":{"line":303,"column":58}},"36":{"start":{"line":304,"column":12},"end":{"line":304,"column":62}},"37":{"start":{"line":308,"column":12},"end":{"line":308,"column":88}},"38":{"start":{"line":308,"column":55},"end":{"line":308,"column":86}},"39":{"start":{"line":309,"column":12},"end":{"line":309,"column":84}},"40":{"start":{"line":309,"column":53},"end":{"line":309,"column":82}},"41":{"start":{"line":310,"column":12},"end":{"line":310,"column":88}},"42":{"start":{"line":310,"column":55},"end":{"line":310,"column":86}},"43":{"start":{"line":328,"column":12},"end":{"line":328,"column":70}},"44":{"start":{"line":329,"column":12},"end":{"line":329,"column":55}},"45":{"start":{"line":330,"column":12},"end":{"line":330,"column":56}},"46":{"start":{"line":342,"column":12},"end":{"line":344,"column":13}},"47":{"start":{"line":343,"column":16},"end":{"line":343,"column":74}},"48":{"start":{"line":356,"column":12},"end":{"line":358,"column":13}},"49":{"start":{"line":357,"column":16},"end":{"line":357,"column":72}},"50":{"start":{"line":370,"column":12},"end":{"line":372,"column":13}},"51":{"start":{"line":371,"column":16},"end":{"line":371,"column":74}},"52":{"start":{"line":384,"column":12},"end":{"line":384,"column":44}},"53":{"start":{"line":398,"column":12},"end":{"line":398,"column":94}},"54":{"start":{"line":411,"column":12},"end":{"line":411,"column":59}},"55":{"start":{"line":412,"column":12},"end":{"line":412,"column":46}},"56":{"start":{"line":414,"column":12},"end":{"line":416,"column":13}},"57":{"start":{"line":415,"column":16},"end":{"line":415,"column":49}},"58":{"start":{"line":418,"column":12},"end":{"line":420,"column":13}},"59":{"start":{"line":419,"column":16},"end":{"line":419,"column":46}},"60":{"start":{"line":422,"column":12},"end":{"line":422,"column":31}},"61":{"start":{"line":434,"column":12},"end":{"line":439,"column":13}},"62":{"start":{"line":435,"column":16},"end":{"line":435,"column":46}},"63":{"start":{"line":436,"column":16},"end":{"line":438,"column":17}},"64":{"start":{"line":437,"column":20},"end":{"line":437,"column":79}},"65":{"start":{"line":457,"column":12},"end":{"line":465,"column":13}},"66":{"start":{"line":458,"column":16},"end":{"line":458,"column":61}},"67":{"start":{"line":460,"column":16},"end":{"line":460,"column":61}},"68":{"start":{"line":462,"column":16},"end":{"line":462,"column":94}},"69":{"start":{"line":464,"column":16},"end":{"line":464,"column":43}},"70":{"start":{"line":466,"column":12},"end":{"line":466,"column":37}},"71":{"start":{"line":479,"column":12},"end":{"line":480,"column":63}},"72":{"start":{"line":482,"column":12},"end":{"line":484,"column":13}},"73":{"start":{"line":483,"column":16},"end":{"line":483,"column":63}},"74":{"start":{"line":486,"column":12},"end":{"line":486,"column":72}},"75":{"start":{"line":488,"column":12},"end":{"line":488,"column":54}},"76":{"start":{"line":489,"column":12},"end":{"line":489,"column":47}},"77":{"start":{"line":500,"column":12},"end":{"line":500,"column":58}},"78":{"start":{"line":501,"column":12},"end":{"line":504,"column":13}},"79":{"start":{"line":502,"column":16},"end":{"line":502,"column":41}},"80":{"start":{"line":503,"column":16},"end":{"line":503,"column":51}},"81":{"start":{"line":517,"column":12},"end":{"line":517,"column":49}},"82":{"start":{"line":519,"column":12},"end":{"line":532,"column":13}},"83":{"start":{"line":520,"column":16},"end":{"line":520,"column":52}},"84":{"start":{"line":522,"column":16},"end":{"line":531,"column":17}},"85":{"start":{"line":523,"column":20},"end":{"line":523,"column":61}},"86":{"start":{"line":525,"column":20},"end":{"line":525,"column":64}},"87":{"start":{"line":526,"column":20},"end":{"line":530,"column":21}},"88":{"start":{"line":527,"column":24},"end":{"line":527,"column":69}},"89":{"start":{"line":529,"column":24},"end":{"line":529,"column":60}},"90":{"start":{"line":545,"column":12},"end":{"line":545,"column":96}},"91":{"start":{"line":564,"column":12},"end":{"line":573,"column":13}},"92":{"start":{"line":566,"column":20},"end":{"line":566,"column":30}},"93":{"start":{"line":567,"column":20},"end":{"line":567,"column":26}},"94":{"start":{"line":569,"column":20},"end":{"line":569,"column":38}},"95":{"start":{"line":570,"column":20},"end":{"line":570,"column":26}},"96":{"start":{"line":572,"column":20},"end":{"line":572,"column":43}},"97":{"start":{"line":575,"column":12},"end":{"line":575,"column":41}},"98":{"start":{"line":588,"column":12},"end":{"line":589,"column":49}},"99":{"start":{"line":591,"column":12},"end":{"line":596,"column":13}},"100":{"start":{"line":592,"column":16},"end":{"line":592,"column":56}},"101":{"start":{"line":593,"column":16},"end":{"line":595,"column":17}},"102":{"start":{"line":594,"column":20},"end":{"line":594,"column":70}},"103":{"start":{"line":598,"column":12},"end":{"line":598,"column":26}},"104":{"start":{"line":611,"column":12},"end":{"line":611,"column":90}},"105":{"start":{"line":625,"column":12},"end":{"line":625,"column":56}},"106":{"start":{"line":627,"column":12},"end":{"line":635,"column":13}},"107":{"start":{"line":628,"column":16},"end":{"line":631,"column":17}},"108":{"start":{"line":629,"column":20},"end":{"line":629,"column":44}},"109":{"start":{"line":630,"column":20},"end":{"line":630,"column":87}},"110":{"start":{"line":632,"column":16},"end":{"line":632,"column":65}},"111":{"start":{"line":634,"column":16},"end":{"line":634,"column":45}},"112":{"start":{"line":637,"column":12},"end":{"line":637,"column":24}},"113":{"start":{"line":651,"column":12},"end":{"line":651,"column":44}},"114":{"start":{"line":652,"column":12},"end":{"line":656,"column":13}},"115":{"start":{"line":653,"column":16},"end":{"line":653,"column":96}},"116":{"start":{"line":654,"column":16},"end":{"line":654,"column":90}},"117":{"start":{"line":655,"column":16},"end":{"line":655,"column":96}},"118":{"start":{"line":668,"column":12},"end":{"line":668,"column":103}},"119":{"start":{"line":685,"column":12},"end":{"line":685,"column":80}},"120":{"start":{"line":706,"column":12},"end":{"line":706,"column":59}},"121":{"start":{"line":708,"column":12},"end":{"line":710,"column":13}},"122":{"start":{"line":709,"column":16},"end":{"line":709,"column":51}},"123":{"start":{"line":712,"column":12},"end":{"line":712,"column":24}},"124":{"start":{"line":733,"column":12},"end":{"line":773,"column":13}},"125":{"start":{"line":734,"column":16},"end":{"line":741,"column":38}},"126":{"start":{"line":743,"column":16},"end":{"line":752,"column":17}},"127":{"start":{"line":744,"column":20},"end":{"line":744,"column":48}},"128":{"start":{"line":745,"column":20},"end":{"line":751,"column":21}},"129":{"start":{"line":746,"column":24},"end":{"line":750,"column":25}},"130":{"start":{"line":747,"column":28},"end":{"line":747,"column":73}},"131":{"start":{"line":749,"column":28},"end":{"line":749,"column":45}},"132":{"start":{"line":754,"column":16},"end":{"line":772,"column":17}},"133":{"start":{"line":755,"column":20},"end":{"line":758,"column":21}},"134":{"start":{"line":757,"column":24},"end":{"line":757,"column":51}},"135":{"start":{"line":760,"column":20},"end":{"line":764,"column":88}},"136":{"start":{"line":766,"column":20},"end":{"line":771,"column":21}},"137":{"start":{"line":767,"column":24},"end":{"line":767,"column":61}},"138":{"start":{"line":768,"column":24},"end":{"line":770,"column":25}},"139":{"start":{"line":769,"column":28},"end":{"line":769,"column":63}},"140":{"start":{"line":777,"column":4},"end":{"line":777,"column":28}}},"branchMap":{"1":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":12},"end":{"line":272,"column":12}},{"start":{"line":272,"column":12},"end":{"line":272,"column":12}}]},"2":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":16},"end":{"line":272,"column":29}},{"start":{"line":272,"column":33},"end":{"line":272,"column":62}}]},"3":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":12},"end":{"line":276,"column":12}},{"start":{"line":276,"column":12},"end":{"line":276,"column":12}}]},"4":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":16},"end":{"line":276,"column":29}},{"start":{"line":276,"column":33},"end":{"line":276,"column":60}}]},"5":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":12},"end":{"line":280,"column":12}},{"start":{"line":280,"column":12},"end":{"line":280,"column":12}}]},"6":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":16},"end":{"line":280,"column":29}},{"start":{"line":280,"column":33},"end":{"line":280,"column":62}}]},"7":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":12},"end":{"line":308,"column":12}},{"start":{"line":308,"column":12},"end":{"line":308,"column":12}}]},"8":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":12},"end":{"line":309,"column":12}},{"start":{"line":309,"column":12},"end":{"line":309,"column":12}}]},"9":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":12},"end":{"line":310,"column":12}},{"start":{"line":310,"column":12},"end":{"line":310,"column":12}}]},"10":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":12},"end":{"line":342,"column":12}},{"start":{"line":342,"column":12},"end":{"line":342,"column":12}}]},"11":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":12},"end":{"line":356,"column":12}},{"start":{"line":356,"column":12},"end":{"line":356,"column":12}}]},"12":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":12},"end":{"line":370,"column":12}},{"start":{"line":370,"column":12},"end":{"line":370,"column":12}}]},"13":{"line":398,"type":"binary-expr","locations":[{"start":{"line":398,"column":19},"end":{"line":398,"column":23}},{"start":{"line":398,"column":27},"end":{"line":398,"column":45}},{"start":{"line":398,"column":49},"end":{"line":398,"column":69}},{"start":{"line":398,"column":73},"end":{"line":398,"column":93}}]},"14":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":12},"end":{"line":414,"column":12}},{"start":{"line":414,"column":12},"end":{"line":414,"column":12}}]},"15":{"line":414,"type":"binary-expr","locations":[{"start":{"line":414,"column":16},"end":{"line":414,"column":24}},{"start":{"line":414,"column":28},"end":{"line":414,"column":49}}]},"16":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":12},"end":{"line":418,"column":12}},{"start":{"line":418,"column":12},"end":{"line":418,"column":12}}]},"17":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":12},"end":{"line":434,"column":12}},{"start":{"line":434,"column":12},"end":{"line":434,"column":12}}]},"18":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":16},"end":{"line":436,"column":16}},{"start":{"line":436,"column":16},"end":{"line":436,"column":16}}]},"19":{"line":436,"type":"binary-expr","locations":[{"start":{"line":436,"column":20},"end":{"line":436,"column":35}},{"start":{"line":436,"column":39},"end":{"line":436,"column":53}}]},"20":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":12},"end":{"line":457,"column":12}},{"start":{"line":457,"column":12},"end":{"line":457,"column":12}}]},"21":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":12},"end":{"line":482,"column":12}},{"start":{"line":482,"column":12},"end":{"line":482,"column":12}}]},"22":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":12},"end":{"line":501,"column":12}},{"start":{"line":501,"column":12},"end":{"line":501,"column":12}}]},"23":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":12},"end":{"line":519,"column":12}},{"start":{"line":519,"column":12},"end":{"line":519,"column":12}}]},"24":{"line":519,"type":"binary-expr","locations":[{"start":{"line":519,"column":16},"end":{"line":519,"column":38}},{"start":{"line":519,"column":42},"end":{"line":519,"column":45}}]},"25":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":16},"end":{"line":522,"column":16}},{"start":{"line":522,"column":16},"end":{"line":522,"column":16}}]},"26":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":20},"end":{"line":526,"column":20}},{"start":{"line":526,"column":20},"end":{"line":526,"column":20}}]},"27":{"line":564,"type":"switch","locations":[{"start":{"line":565,"column":16},"end":{"line":567,"column":26}},{"start":{"line":568,"column":16},"end":{"line":570,"column":26}},{"start":{"line":571,"column":16},"end":{"line":572,"column":43}}]},"28":{"line":588,"type":"cond-expr","locations":[{"start":{"line":588,"column":34},"end":{"line":588,"column":57}},{"start":{"line":588,"column":60},"end":{"line":588,"column":61}}]},"29":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":12},"end":{"line":591,"column":12}},{"start":{"line":591,"column":12},"end":{"line":591,"column":12}}]},"30":{"line":591,"type":"binary-expr","locations":[{"start":{"line":591,"column":16},"end":{"line":591,"column":20}},{"start":{"line":591,"column":24},"end":{"line":591,"column":46}}]},"31":{"line":593,"type":"if","locations":[{"start":{"line":593,"column":16},"end":{"line":593,"column":16}},{"start":{"line":593,"column":16},"end":{"line":593,"column":16}}]},"32":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":12},"end":{"line":627,"column":12}},{"start":{"line":627,"column":12},"end":{"line":627,"column":12}}]},"33":{"line":628,"type":"if","locations":[{"start":{"line":628,"column":16},"end":{"line":628,"column":16}},{"start":{"line":628,"column":16},"end":{"line":628,"column":16}}]},"34":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":12},"end":{"line":652,"column":12}},{"start":{"line":652,"column":12},"end":{"line":652,"column":12}}]},"35":{"line":653,"type":"binary-expr","locations":[{"start":{"line":653,"column":41},"end":{"line":653,"column":65}},{"start":{"line":653,"column":70},"end":{"line":653,"column":94}}]},"36":{"line":654,"type":"binary-expr","locations":[{"start":{"line":654,"column":39},"end":{"line":654,"column":61}},{"start":{"line":654,"column":66},"end":{"line":654,"column":88}}]},"37":{"line":655,"type":"binary-expr","locations":[{"start":{"line":655,"column":41},"end":{"line":655,"column":65}},{"start":{"line":655,"column":70},"end":{"line":655,"column":94}}]},"38":{"line":668,"type":"cond-expr","locations":[{"start":{"line":668,"column":51},"end":{"line":668,"column":95}},{"start":{"line":668,"column":98},"end":{"line":668,"column":102}}]},"39":{"line":706,"type":"binary-expr","locations":[{"start":{"line":706,"column":23},"end":{"line":706,"column":50}},{"start":{"line":706,"column":54},"end":{"line":706,"column":58}}]},"40":{"line":708,"type":"if","locations":[{"start":{"line":708,"column":12},"end":{"line":708,"column":12}},{"start":{"line":708,"column":12},"end":{"line":708,"column":12}}]},"41":{"line":708,"type":"binary-expr","locations":[{"start":{"line":708,"column":16},"end":{"line":708,"column":21}},{"start":{"line":708,"column":25},"end":{"line":708,"column":36}}]},"42":{"line":733,"type":"if","locations":[{"start":{"line":733,"column":12},"end":{"line":733,"column":12}},{"start":{"line":733,"column":12},"end":{"line":733,"column":12}}]},"43":{"line":745,"type":"if","locations":[{"start":{"line":745,"column":20},"end":{"line":745,"column":20}},{"start":{"line":745,"column":20},"end":{"line":745,"column":20}}]},"44":{"line":746,"type":"if","locations":[{"start":{"line":746,"column":24},"end":{"line":746,"column":24}},{"start":{"line":746,"column":24},"end":{"line":746,"column":24}}]},"45":{"line":754,"type":"if","locations":[{"start":{"line":754,"column":16},"end":{"line":754,"column":16}},{"start":{"line":754,"column":16},"end":{"line":754,"column":16}}]},"46":{"line":755,"type":"if","locations":[{"start":{"line":755,"column":20},"end":{"line":755,"column":20}},{"start":{"line":755,"column":20},"end":{"line":755,"column":20}}]},"47":{"line":755,"type":"binary-expr","locations":[{"start":{"line":755,"column":24},"end":{"line":755,"column":29}},{"start":{"line":755,"column":33},"end":{"line":755,"column":41}}]},"48":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":20},"end":{"line":766,"column":20}},{"start":{"line":766,"column":20},"end":{"line":766,"column":20}}]},"49":{"line":768,"type":"if","locations":[{"start":{"line":768,"column":24},"end":{"line":768,"column":24}},{"start":{"line":768,"column":24},"end":{"line":768,"column":24}}]}},"code":["(function () { YUI.add('widget-stdmod', function (Y, NAME) {","","/**\r"," * Provides standard module support for Widgets through an extension.\r"," *\r"," * @module widget-stdmod\r"," */\r","    var L = Y.Lang,\r","        Node = Y.Node,\r","        UA = Y.UA,\r","        Widget = Y.Widget,\r","\r","        EMPTY = \"\",\r","        HD = \"hd\",\r","        BD = \"bd\",\r","        FT = \"ft\",\r","        HEADER = \"header\",\r","        BODY = \"body\",\r","        FOOTER = \"footer\",\r","        FILL_HEIGHT = \"fillHeight\",\r","        STDMOD = \"stdmod\",\r","\r","        NODE_SUFFIX = \"Node\",\r","        CONTENT_SUFFIX = \"Content\",\r","\r","        FIRST_CHILD = \"firstChild\",\r","        CHILD_NODES = \"childNodes\",\r","        OWNER_DOCUMENT = \"ownerDocument\",\r","\r","        CONTENT_BOX = \"contentBox\",\r","\r","        HEIGHT = \"height\",\r","        OFFSET_HEIGHT = \"offsetHeight\",\r","        AUTO = \"auto\",\r","\r","        HeaderChange = \"headerContentChange\",\r","        BodyChange = \"bodyContentChange\",\r","        FooterChange = \"footerContentChange\",\r","        FillHeightChange = \"fillHeightChange\",\r","        HeightChange = \"heightChange\",\r","        ContentUpdate = \"contentUpdate\",\r","\r","        RENDERUI = \"renderUI\",\r","        BINDUI = \"bindUI\",\r","        SYNCUI = \"syncUI\",\r","\r","        APPLY_PARSED_CONFIG = \"_applyParsedConfig\",\r","\r","        UI = Y.Widget.UI_SRC;\r","\r","    /**\r","     * Widget extension, which can be used to add Standard Module support to the\r","     * base Widget class, through the <a href=\"Base.html#method_build\">Base.build</a>\r","     * method.\r","     * <p>\r","     * The extension adds header, body and footer sections to the Widget's content box and\r","     * provides the corresponding methods and attributes to modify the contents of these sections.\r","     * </p>\r","     * @class WidgetStdMod\r","     * @param {Object} The user configuration object\r","     */\r","    function StdMod(config) {}\r","\r","    /**\r","     * Constant used to refer the the standard module header, in methods which expect a section specifier\r","     *\r","     * @property HEADER\r","     * @static\r","     * @type String\r","     */\r","    StdMod.HEADER = HEADER;\r","\r","    /**\r","     * Constant used to refer the the standard module body, in methods which expect a section specifier\r","     *\r","     * @property BODY\r","     * @static\r","     * @type String\r","     */\r","    StdMod.BODY = BODY;\r","\r","    /**\r","     * Constant used to refer the the standard module footer, in methods which expect a section specifier\r","     *\r","     * @property FOOTER\r","     * @static\r","     * @type String\r","     */\r","    StdMod.FOOTER = FOOTER;\r","\r","    /**\r","     * Constant used to specify insertion position, when adding content to sections of the standard module in\r","     * methods which expect a \"where\" argument.\r","     * <p>\r","     * Inserts new content <em>before</em> the sections existing content.\r","     * </p>\r","     * @property AFTER\r","     * @static\r","     * @type String\r","     */\r","    StdMod.AFTER = \"after\";\r","\r","    /**\r","     * Constant used to specify insertion position, when adding content to sections of the standard module in\r","     * methods which expect a \"where\" argument.\r","     * <p>\r","     * Inserts new content <em>before</em> the sections existing content.\r","     * </p>\r","     * @property BEFORE\r","     * @static\r","     * @type String\r","     */\r","    StdMod.BEFORE = \"before\";\r","    /**\r","     * Constant used to specify insertion position, when adding content to sections of the standard module in\r","     * methods which expect a \"where\" argument.\r","     * <p>\r","     * <em>Replaces</em> the sections existing content, with new content.\r","     * </p>\r","     * @property REPLACE\r","     * @static\r","     * @type String\r","     */\r","    StdMod.REPLACE = \"replace\";\r","\r","    var STD_HEADER = StdMod.HEADER,\r","        STD_BODY = StdMod.BODY,\r","        STD_FOOTER = StdMod.FOOTER,\r","\r","        HEADER_CONTENT = STD_HEADER + CONTENT_SUFFIX,\r","        FOOTER_CONTENT = STD_FOOTER + CONTENT_SUFFIX,\r","        BODY_CONTENT = STD_BODY + CONTENT_SUFFIX;\r","\r","    /**\r","     * Static property used to define the default attribute\r","     * configuration introduced by WidgetStdMod.\r","     *\r","     * @property ATTRS\r","     * @type Object\r","     * @static\r","     */\r","    StdMod.ATTRS = {\r","\r","        /**\r","         * @attribute headerContent\r","         * @type HTML\r","         * @default undefined\r","         * @description The content to be added to the header section. This will replace any existing content\r","         * in the header. If you want to append, or insert new content, use the <a href=\"#method_setStdModContent\">setStdModContent</a> method.\r","         */\r","        headerContent: {\r","            value:null\r","        },\r","\r","        /**\r","         * @attribute footerContent\r","         * @type HTML\r","         * @default undefined\r","         * @description The content to be added to the footer section. This will replace any existing content\r","         * in the footer. If you want to append, or insert new content, use the <a href=\"#method_setStdModContent\">setStdModContent</a> method.\r","         */\r","        footerContent: {\r","            value:null\r","        },\r","\r","        /**\r","         * @attribute bodyContent\r","         * @type HTML\r","         * @default undefined\r","         * @description The content to be added to the body section. This will replace any existing content\r","         * in the body. If you want to append, or insert new content, use the <a href=\"#method_setStdModContent\">setStdModContent</a> method.\r","         */\r","        bodyContent: {\r","            value:null\r","        },\r","\r","        /**\r","         * @attribute fillHeight\r","         * @type {String}\r","         * @default WidgetStdMod.BODY\r","         * @description The section (WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER) which should be resized to fill the height of the standard module, when a\r","         * height is set on the Widget. If a height is not set on the widget, then all sections are sized based on\r","         * their content.\r","         */\r","        fillHeight: {\r","            value: StdMod.BODY,\r","            validator: function(val) {\r","                 return this._validateFillHeight(val);\r","            }\r","        }\r","    };\r","\r","    /**\r","     * The HTML parsing rules for the WidgetStdMod class.\r","     *\r","     * @property HTML_PARSER\r","     * @static\r","     * @type Object\r","     */\r","    StdMod.HTML_PARSER = {\r","        headerContent: function(contentBox) {\r","            return this._parseStdModHTML(STD_HEADER);\r","        },\r","\r","        bodyContent: function(contentBox) {\r","            return this._parseStdModHTML(STD_BODY);\r","        },\r","\r","        footerContent : function(contentBox) {\r","            return this._parseStdModHTML(STD_FOOTER);\r","        }\r","    };\r","\r","    /**\r","     * Static hash of default class names used for the header,\r","     * body and footer sections of the standard module, keyed by\r","     * the section identifier (WidgetStdMod.STD_HEADER, WidgetStdMod.STD_BODY, WidgetStdMod.STD_FOOTER)\r","     *\r","     * @property SECTION_CLASS_NAMES\r","     * @static\r","     * @type Object\r","     */\r","    StdMod.SECTION_CLASS_NAMES = {\r","        header: Widget.getClassName(HD),\r","        body: Widget.getClassName(BD),\r","        footer: Widget.getClassName(FT)\r","    };\r","\r","    /**\r","     * The template HTML strings for each of the standard module sections. Section entries are keyed by the section constants,\r","     * WidgetStdMod.HEADER, WidgetStdMod.BODY, WidgetStdMod.FOOTER, and contain the HTML to be added for each section.\r","     * e.g.\r","     * <pre>\r","     *    {\r","     *       header : '&lt;div class=\"yui-widget-hd\"&gt;&lt;/div&gt;',\r","     *       body : '&lt;div class=\"yui-widget-bd\"&gt;&lt;/div&gt;',\r","     *       footer : '&lt;div class=\"yui-widget-ft\"&gt;&lt;/div&gt;'\r","     *    }\r","     * </pre>\r","     * @property TEMPLATES\r","     * @type Object\r","     * @static\r","     */\r","    StdMod.TEMPLATES = {\r","        header : '<div class=\"' + StdMod.SECTION_CLASS_NAMES[STD_HEADER] + '\"></div>',\r","        body : '<div class=\"' + StdMod.SECTION_CLASS_NAMES[STD_BODY] + '\"></div>',\r","        footer : '<div class=\"' + StdMod.SECTION_CLASS_NAMES[STD_FOOTER] + '\"></div>'\r","    };\r","\r","    StdMod.prototype = {\r","\r","        initializer : function() {\r","            this._stdModNode = this.get(CONTENT_BOX);\r","\r","            Y.before(this._renderUIStdMod, this, RENDERUI);\r","            Y.before(this._bindUIStdMod, this, BINDUI);\r","            Y.before(this._syncUIStdMod, this, SYNCUI);\r","        },\r","\r","        /**\r","         * Synchronizes the UI to match the Widgets standard module state.\r","         * <p>\r","         * This method is invoked after syncUI is invoked for the Widget class\r","         * using YUI's aop infrastructure.\r","         * </p>\r","         * @method _syncUIStdMod\r","         * @protected\r","         */\r","        _syncUIStdMod : function() {\r","            var stdModParsed = this._stdModParsed;\r","\r","            if (!stdModParsed || !stdModParsed[HEADER_CONTENT]) {\r","                this._uiSetStdMod(STD_HEADER, this.get(HEADER_CONTENT));\r","            }\r","\r","            if (!stdModParsed || !stdModParsed[BODY_CONTENT]) {\r","                this._uiSetStdMod(STD_BODY, this.get(BODY_CONTENT));\r","            }\r","\r","            if (!stdModParsed || !stdModParsed[FOOTER_CONTENT]) {\r","                this._uiSetStdMod(STD_FOOTER, this.get(FOOTER_CONTENT));\r","            }\r","\r","            this._uiSetFillHeight(this.get(FILL_HEIGHT));\r","        },\r","\r","        /**\r","         * Creates/Initializes the DOM for standard module support.\r","         * <p>\r","         * This method is invoked after renderUI is invoked for the Widget class\r","         * using YUI's aop infrastructure.\r","         * </p>\r","         * @method _renderUIStdMod\r","         * @protected\r","         */\r","        _renderUIStdMod : function() {\r","            this._stdModNode.addClass(Widget.getClassName(STDMOD));\r","            this._renderStdModSections();\r","\r","            //This normally goes in bindUI but in order to allow setStdModContent() to work before renderUI\r","            //stage, these listeners should be set up at the earliest possible time.\r","            this.after(HeaderChange, this._afterHeaderChange);\r","            this.after(BodyChange, this._afterBodyChange);\r","            this.after(FooterChange, this._afterFooterChange);\r","        },\r","\r","        _renderStdModSections : function() {\r","            if (L.isValue(this.get(HEADER_CONTENT))) { this._renderStdMod(STD_HEADER); }\r","            if (L.isValue(this.get(BODY_CONTENT))) { this._renderStdMod(STD_BODY); }\r","            if (L.isValue(this.get(FOOTER_CONTENT))) { this._renderStdMod(STD_FOOTER); }\r","        },\r","\r","        /**\r","         * Binds event listeners responsible for updating the UI state in response to\r","         * Widget standard module related state changes.\r","         * <p>\r","         * This method is invoked after bindUI is invoked for the Widget class\r","         * using YUI's aop infrastructure.\r","         * </p>\r","         * @method _bindUIStdMod\r","         * @protected\r","         */\r","        _bindUIStdMod : function() {\r","            // this.after(HeaderChange, this._afterHeaderChange);\r","            // this.after(BodyChange, this._afterBodyChange);\r","            // this.after(FooterChange, this._afterFooterChange);\r","\r","            this.after(FillHeightChange, this._afterFillHeightChange);\r","            this.after(HeightChange, this._fillHeight);\r","            this.after(ContentUpdate, this._fillHeight);\r","        },\r","\r","        /**\r","         * Default attribute change listener for the headerContent attribute, responsible\r","         * for updating the UI, in response to attribute changes.\r","         *\r","         * @method _afterHeaderChange\r","         * @protected\r","         * @param {EventFacade} e The event facade for the attribute change\r","         */\r","        _afterHeaderChange : function(e) {\r","            if (e.src !== UI) {\r","                this._uiSetStdMod(STD_HEADER, e.newVal, e.stdModPosition);\r","            }\r","        },\r","\r","        /**\r","         * Default attribute change listener for the bodyContent attribute, responsible\r","         * for updating the UI, in response to attribute changes.\r","         *\r","         * @method _afterBodyChange\r","         * @protected\r","         * @param {EventFacade} e The event facade for the attribute change\r","         */\r","        _afterBodyChange : function(e) {\r","            if (e.src !== UI) {\r","                this._uiSetStdMod(STD_BODY, e.newVal, e.stdModPosition);\r","            }\r","        },\r","\r","        /**\r","         * Default attribute change listener for the footerContent attribute, responsible\r","         * for updating the UI, in response to attribute changes.\r","         *\r","         * @method _afterFooterChange\r","         * @protected\r","         * @param {EventFacade} e The event facade for the attribute change\r","         */\r","        _afterFooterChange : function(e) {\r","            if (e.src !== UI) {\r","                this._uiSetStdMod(STD_FOOTER, e.newVal, e.stdModPosition);\r","            }\r","        },\r","\r","        /**\r","         * Default attribute change listener for the fillHeight attribute, responsible\r","         * for updating the UI, in response to attribute changes.\r","         *\r","         * @method _afterFillHeightChange\r","         * @protected\r","         * @param {EventFacade} e The event facade for the attribute change\r","         */\r","        _afterFillHeightChange: function (e) {\r","            this._uiSetFillHeight(e.newVal);\r","        },\r","\r","        /**\r","         * Default validator for the fillHeight attribute. Verifies that the\r","         * value set is a valid section specifier - one of WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER,\r","         * or a falsey value if fillHeight is to be disabled.\r","         *\r","         * @method _validateFillHeight\r","         * @protected\r","         * @param {String} val The section which should be setup to fill height, or false/null to disable fillHeight\r","         * @return true if valid, false if not\r","         */\r","        _validateFillHeight : function(val) {\r","            return !val || val == StdMod.BODY || val == StdMod.HEADER || val == StdMod.FOOTER;\r","        },\r","\r","        /**\r","         * Updates the rendered UI, to resize the provided section so that the standard module fills out\r","         * the specified widget height. Note: This method does not check whether or not a height is set\r","         * on the Widget.\r","         *\r","         * @method _uiSetFillHeight\r","         * @protected\r","         * @param {String} fillSection A valid section specifier - one of WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER\r","         */\r","        _uiSetFillHeight : function(fillSection) {\r","            var fillNode = this.getStdModNode(fillSection);\r","            var currNode = this._currFillNode;\r","\r","            if (currNode && fillNode !== currNode){\r","                currNode.setStyle(HEIGHT, EMPTY);\r","            }\r","\r","            if (fillNode) {\r","                this._currFillNode = fillNode;\r","            }\r","\r","            this._fillHeight();\r","        },\r","\r","        /**\r","         * Updates the rendered UI, to resize the current section specified by the fillHeight attribute, so\r","         * that the standard module fills out the Widget height. If a height has not been set on Widget,\r","         * the section is not resized (height is set to \"auto\").\r","         *\r","         * @method _fillHeight\r","         * @private\r","         */\r","        _fillHeight : function() {\r","            if (this.get(FILL_HEIGHT)) {\r","                var height = this.get(HEIGHT);\r","                if (height != EMPTY && height != AUTO) {\r","                    this.fillHeight(this.getStdModNode(this.get(FILL_HEIGHT)));\r","                }\r","            }\r","        },\r","\r","        /**\r","         * Updates the rendered UI, adding the provided content (either an HTML string, or node reference),\r","         * to the specified section. The content is either added before, after or replaces existing content\r","         * in the section, based on the value of the <code>where</code> argument.\r","         *\r","         * @method _uiSetStdMod\r","         * @protected\r","         *\r","         * @param {String} section The section to be updated. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.\r","         * @param {String | Node} content The new content (either as an HTML string, or Node reference) to add to the section\r","         * @param {String} where Optional. Either WidgetStdMod.AFTER, WidgetStdMod.BEFORE or WidgetStdMod.REPLACE.\r","         * If not provided, the content will replace existing content in the section.\r","         */\r","        _uiSetStdMod : function(section, content, where) {\r","            // Using isValue, so that \"\" is valid content\r","            if (L.isValue(content)) {\r","                var node = this.getStdModNode(section, true);\r","\r","                this._addStdModContent(node, content, where);\r","\r","                this.set(section + CONTENT_SUFFIX, this._getStdModContent(section), {src:UI});\r","            } else {\r","                this._eraseStdMod(section);\r","            }\r","            this.fire(ContentUpdate);\r","        },\r","\r","        /**\r","         * Creates the DOM node for the given section, and inserts it into the correct location in the contentBox.\r","         *\r","         * @method _renderStdMod\r","         * @protected\r","         * @param {String} section The section to create/render. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.\r","         * @return {Node} A reference to the added section node\r","         */\r","        _renderStdMod : function(section) {\r","\r","            var contentBox = this.get(CONTENT_BOX),\r","                sectionNode = this._findStdModSection(section);\r","\r","            if (!sectionNode) {\r","                sectionNode = this._getStdModTemplate(section);\r","            }\r","\r","            this._insertStdModSection(contentBox, section, sectionNode);\r","\r","            this[section + NODE_SUFFIX] = sectionNode;\r","            return this[section + NODE_SUFFIX];\r","        },\r","\r","        /**\r","         * Removes the DOM node for the given section.\r","         *\r","         * @method _eraseStdMod\r","         * @protected\r","         * @param {String} section The section to remove. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.\r","         */\r","        _eraseStdMod : function(section) {\r","            var sectionNode = this.getStdModNode(section);\r","            if (sectionNode) {\r","                sectionNode.remove(true);\r","                delete this[section + NODE_SUFFIX];\r","            }\r","        },\r","\r","        /**\r","         * Helper method to insert the Node for the given section into the correct location in the contentBox.\r","         *\r","         * @method _insertStdModSection\r","         * @private\r","         * @param {Node} contentBox A reference to the Widgets content box.\r","         * @param {String} section The section to create/render. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.\r","         * @param {Node} sectionNode The Node for the section.\r","         */\r","        _insertStdModSection : function(contentBox, section, sectionNode) {\r","            var fc = contentBox.get(FIRST_CHILD);\r","\r","            if (section === STD_FOOTER || !fc) {\r","                contentBox.appendChild(sectionNode);\r","            } else {\r","                if (section === STD_HEADER) {\r","                    contentBox.insertBefore(sectionNode, fc);\r","                } else {\r","                    var footer = this[STD_FOOTER + NODE_SUFFIX];\r","                    if (footer) {\r","                        contentBox.insertBefore(sectionNode, footer);\r","                    } else {\r","                        contentBox.appendChild(sectionNode);\r","                    }\r","                }\r","            }\r","        },\r","\r","        /**\r","         * Gets a new Node reference for the given standard module section, by cloning\r","         * the stored template node.\r","         *\r","         * @method _getStdModTemplate\r","         * @protected\r","         * @param {String} section The section to create a new node for. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.\r","         * @return {Node} The new Node instance for the section\r","         */\r","        _getStdModTemplate : function(section) {\r","            return Node.create(StdMod.TEMPLATES[section], this._stdModNode.get(OWNER_DOCUMENT));\r","        },\r","\r","        /**\r","         * Helper method to add content to a StdMod section node.\r","         * The content is added either before, after or replaces the existing node content\r","         * based on the value of the <code>where</code> argument.\r","         *\r","         * @method _addStdModContent\r","         * @private\r","         *\r","         * @param {Node} node The section Node to be updated.\r","         * @param {Node|NodeList|String} children The new content Node, NodeList or String to be added to section Node provided.\r","         * @param {String} where Optional. Either WidgetStdMod.AFTER, WidgetStdMod.BEFORE or WidgetStdMod.REPLACE.\r","         * If not provided, the content will replace existing content in the Node.\r","         */\r","        _addStdModContent : function(node, children, where) {\r","\r","            // StdMod where to Node where\r","            switch (where) {\r","                case StdMod.BEFORE:  // 0 is before fistChild\r","                    where = 0;\r","                    break;\r","                case StdMod.AFTER:   // undefined is appendChild\r","                    where = undefined;\r","                    break;\r","                default:            // replace is replace, not specified is replace\r","                    where = StdMod.REPLACE;\r","            }\r","\r","            node.insert(children, where);\r","        },\r","\r","        /**\r","         * Helper method to obtain the precise height of the node provided, including padding and border.\r","         * The height could be a sub-pixel value for certain browsers, such as Firefox 3.\r","         *\r","         * @method _getPreciseHeight\r","         * @private\r","         * @param {Node} node The node for which the precise height is required.\r","         * @return {Number} The height of the Node including borders and padding, possibly a float.\r","         */\r","        _getPreciseHeight : function(node) {\r","            var height = (node) ? node.get(OFFSET_HEIGHT) : 0,\r","                getBCR = \"getBoundingClientRect\";\r","\r","            if (node && node.hasMethod(getBCR)) {\r","                var preciseRegion = node.invoke(getBCR);\r","                if (preciseRegion) {\r","                    height = preciseRegion.bottom - preciseRegion.top;\r","                }\r","            }\r","\r","            return height;\r","        },\r","\r","        /**\r","         * Helper method to to find the rendered node for the given section,\r","         * if it exists.\r","         *\r","         * @method _findStdModSection\r","         * @private\r","         * @param {String} section The section for which the render Node is to be found. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.\r","         * @return {Node} The rendered node for the given section, or null if not found.\r","         */\r","        _findStdModSection: function(section) {\r","            return this.get(CONTENT_BOX).one(\"> .\" + StdMod.SECTION_CLASS_NAMES[section]);\r","        },\r","\r","        /**\r","         * Utility method, used by WidgetStdMods HTML_PARSER implementation\r","         * to extract data for each section from markup.\r","         *\r","         * @method _parseStdModHTML\r","         * @private\r","         * @param {String} section\r","         * @return {String} Inner HTML string with the contents of the section\r","         */\r","        _parseStdModHTML : function(section) {\r","\r","            var node = this._findStdModSection(section);\r","\r","            if (node) {\r","                if (!this._stdModParsed) {\r","                    this._stdModParsed = {};\r","                    Y.before(this._applyStdModParsedConfig, this, APPLY_PARSED_CONFIG);\r","                }\r","                this._stdModParsed[section + CONTENT_SUFFIX] = 1;\r","\r","                return node.get(\"innerHTML\");\r","            }\r","\r","            return null;\r","        },\r","\r","        /**\r","         * This method is injected before the _applyParsedConfig step in\r","         * the application of HTML_PARSER, and sets up the state to\r","         * identify whether or not we should remove the current DOM content\r","         * or not, based on whether or not the current content attribute value\r","         * was extracted from the DOM, or provided by the user configuration\r","         *\r","         * @method _applyStdModParsedConfig\r","         * @private\r","         */\r","        _applyStdModParsedConfig : function(node, cfg, parsedCfg) {\r","            var parsed = this._stdModParsed;\r","            if (parsed) {\r","                parsed[HEADER_CONTENT] = !(HEADER_CONTENT in cfg) && (HEADER_CONTENT in parsed);\r","                parsed[BODY_CONTENT] = !(BODY_CONTENT in cfg) && (BODY_CONTENT in parsed);\r","                parsed[FOOTER_CONTENT] = !(FOOTER_CONTENT in cfg) && (FOOTER_CONTENT in parsed);\r","            }\r","        },\r","\r","        /**\r","         * Retrieves the child nodes (content) of a standard module section\r","         *\r","         * @method _getStdModContent\r","         * @private\r","         * @param {String} section The standard module section whose child nodes are to be retrieved. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.\r","         * @return {Node} The child node collection of the standard module section.\r","         */\r","        _getStdModContent : function(section) {\r","            return (this[section + NODE_SUFFIX]) ? this[section + NODE_SUFFIX].get(CHILD_NODES) : null;\r","        },\r","\r","        /**\r","         * Updates the body section of the standard module with the content provided (either an HTML string, or node reference).\r","         * <p>\r","         * This method can be used instead of the corresponding section content attribute if you'd like to retain the current content of the section,\r","         * and insert content before or after it, by specifying the <code>where</code> argument.\r","         * </p>\r","         * @method setStdModContent\r","         * @param {String} section The standard module section whose content is to be updated. Either WidgetStdMod.HEADER, WidgetStdMod.BODY or WidgetStdMod.FOOTER.\r","         * @param {String | Node} content The content to be added, either an HTML string or a Node reference.\r","         * @param {String} where Optional. Either WidgetStdMod.AFTER, WidgetStdMod.BEFORE or WidgetStdMod.REPLACE.\r","         * If not provided, the content will replace existing content in the section.\r","         */\r","        setStdModContent : function(section, content, where) {\r","            //var node = this.getStdModNode(section) || this._renderStdMod(section);\r","            this.set(section + CONTENT_SUFFIX, content, {stdModPosition:where});\r","            //this._addStdModContent(node, content, where);\r","        },\r","\r","        /**\r","        Returns the node reference for the specified `section`.\r","\r","        **Note:** The DOM is not queried for the node reference. The reference\r","        stored by the widget instance is returned if it was set. Passing a\r","        truthy for `forceCreate` will create the section node if it does not\r","        already exist.\r","\r","        @method getStdModNode\r","        @param {String} section The section whose node reference is required.\r","            Either `WidgetStdMod.HEADER`, `WidgetStdMod.BODY`, or\r","            `WidgetStdMod.FOOTER`.\r","        @param {Boolean} forceCreate Whether the section node should be created\r","            if it does not already exist.\r","        @return {Node} The node reference for the `section`, or null if not set.\r","        **/\r","        getStdModNode : function(section, forceCreate) {\r","            var node = this[section + NODE_SUFFIX] || null;\r","\r","            if (!node && forceCreate) {\r","                node = this._renderStdMod(section);\r","            }\r","\r","            return node;\r","        },\r","\r","        /**\r","         * Sets the height on the provided header, body or footer element to\r","         * fill out the height of the Widget. It determines the height of the\r","         * widgets bounding box, based on it's configured height value, and\r","         * sets the height of the provided section to fill out any\r","         * space remaining after the other standard module section heights\r","         * have been accounted for.\r","         *\r","         * <p><strong>NOTE:</strong> This method is not designed to work if an explicit\r","         * height has not been set on the Widget, since for an \"auto\" height Widget,\r","         * the heights of the header/body/footer will drive the height of the Widget.</p>\r","         *\r","         * @method fillHeight\r","         * @param {Node} node The node which should be resized to fill out the height\r","         * of the Widget bounding box. Should be a standard module section node which belongs\r","         * to the widget.\r","         */\r","        fillHeight : function(node) {\r","            if (node) {\r","                var contentBox = this.get(CONTENT_BOX),\r","                    stdModNodes = [this.headerNode, this.bodyNode, this.footerNode],\r","                    stdModNode,\r","                    cbContentHeight,\r","                    filled = 0,\r","                    remaining = 0,\r","\r","                    validNode = false;\r","\r","                for (var i = 0, l = stdModNodes.length; i < l; i++) {\r","                    stdModNode = stdModNodes[i];\r","                    if (stdModNode) {\r","                        if (stdModNode !== node) {\r","                            filled += this._getPreciseHeight(stdModNode);\r","                        } else {\r","                            validNode = true;\r","                        }\r","                    }\r","                }\r","\r","                if (validNode) {\r","                    if (UA.ie || UA.opera) {\r","                        // Need to set height to 0, to allow height to be reduced\r","                        node.set(OFFSET_HEIGHT, 0);\r","                    }\r","\r","                    cbContentHeight = contentBox.get(OFFSET_HEIGHT) -\r","                            parseInt(contentBox.getComputedStyle(\"paddingTop\"), 10) -\r","                            parseInt(contentBox.getComputedStyle(\"paddingBottom\"), 10) -\r","                            parseInt(contentBox.getComputedStyle(\"borderBottomWidth\"), 10) -\r","                            parseInt(contentBox.getComputedStyle(\"borderTopWidth\"), 10);\r","\r","                    if (L.isNumber(cbContentHeight)) {\r","                        remaining = cbContentHeight - filled;\r","                        if (remaining >= 0) {\r","                            node.set(OFFSET_HEIGHT, remaining);\r","                        }\r","                    }\r","                }\r","            }\r","        }\r","    };\r","\r","    Y.WidgetStdMod = StdMod;\r","","","}, '@VERSION@', {\"requires\": [\"base-build\", \"widget\"]});","","}());"]};
}
var __cov_L0xpEI6PP2k8xsT6uqbWyQ = __coverage__['build/widget-stdmod/widget-stdmod.js'];
__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['1']++;YUI.add('widget-stdmod',function(Y,NAME){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['1']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['2']++;var L=Y.Lang,Node=Y.Node,UA=Y.UA,Widget=Y.Widget,EMPTY='',HD='hd',BD='bd',FT='ft',HEADER='header',BODY='body',FOOTER='footer',FILL_HEIGHT='fillHeight',STDMOD='stdmod',NODE_SUFFIX='Node',CONTENT_SUFFIX='Content',FIRST_CHILD='firstChild',CHILD_NODES='childNodes',OWNER_DOCUMENT='ownerDocument',CONTENT_BOX='contentBox',HEIGHT='height',OFFSET_HEIGHT='offsetHeight',AUTO='auto',HeaderChange='headerContentChange',BodyChange='bodyContentChange',FooterChange='footerContentChange',FillHeightChange='fillHeightChange',HeightChange='heightChange',ContentUpdate='contentUpdate',RENDERUI='renderUI',BINDUI='bindUI',SYNCUI='syncUI',APPLY_PARSED_CONFIG='_applyParsedConfig',UI=Y.Widget.UI_SRC;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['3']++;function StdMod(config){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['2']++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['4']++;StdMod.HEADER=HEADER;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['5']++;StdMod.BODY=BODY;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['6']++;StdMod.FOOTER=FOOTER;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['7']++;StdMod.AFTER='after';__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['8']++;StdMod.BEFORE='before';__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['9']++;StdMod.REPLACE='replace';__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['10']++;var STD_HEADER=StdMod.HEADER,STD_BODY=StdMod.BODY,STD_FOOTER=StdMod.FOOTER,HEADER_CONTENT=STD_HEADER+CONTENT_SUFFIX,FOOTER_CONTENT=STD_FOOTER+CONTENT_SUFFIX,BODY_CONTENT=STD_BODY+CONTENT_SUFFIX;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['11']++;StdMod.ATTRS={headerContent:{value:null},footerContent:{value:null},bodyContent:{value:null},fillHeight:{value:StdMod.BODY,validator:function(val){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['3']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['12']++;return this._validateFillHeight(val);}}};__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['13']++;StdMod.HTML_PARSER={headerContent:function(contentBox){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['4']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['14']++;return this._parseStdModHTML(STD_HEADER);},bodyContent:function(contentBox){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['5']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['15']++;return this._parseStdModHTML(STD_BODY);},footerContent:function(contentBox){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['6']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['16']++;return this._parseStdModHTML(STD_FOOTER);}};__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['17']++;StdMod.SECTION_CLASS_NAMES={header:Widget.getClassName(HD),body:Widget.getClassName(BD),footer:Widget.getClassName(FT)};__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['18']++;StdMod.TEMPLATES={header:'<div class="'+StdMod.SECTION_CLASS_NAMES[STD_HEADER]+'"></div>',body:'<div class="'+StdMod.SECTION_CLASS_NAMES[STD_BODY]+'"></div>',footer:'<div class="'+StdMod.SECTION_CLASS_NAMES[STD_FOOTER]+'"></div>'};__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['19']++;StdMod.prototype={initializer:function(){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['7']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['20']++;this._stdModNode=this.get(CONTENT_BOX);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['21']++;Y.before(this._renderUIStdMod,this,RENDERUI);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['22']++;Y.before(this._bindUIStdMod,this,BINDUI);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['23']++;Y.before(this._syncUIStdMod,this,SYNCUI);},_syncUIStdMod:function(){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['8']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['24']++;var stdModParsed=this._stdModParsed;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['25']++;if((__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['2'][0]++,!stdModParsed)||(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['2'][1]++,!stdModParsed[HEADER_CONTENT])){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['1'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['26']++;this._uiSetStdMod(STD_HEADER,this.get(HEADER_CONTENT));}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['1'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['27']++;if((__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['4'][0]++,!stdModParsed)||(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['4'][1]++,!stdModParsed[BODY_CONTENT])){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['3'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['28']++;this._uiSetStdMod(STD_BODY,this.get(BODY_CONTENT));}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['3'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['29']++;if((__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['6'][0]++,!stdModParsed)||(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['6'][1]++,!stdModParsed[FOOTER_CONTENT])){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['5'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['30']++;this._uiSetStdMod(STD_FOOTER,this.get(FOOTER_CONTENT));}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['5'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['31']++;this._uiSetFillHeight(this.get(FILL_HEIGHT));},_renderUIStdMod:function(){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['9']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['32']++;this._stdModNode.addClass(Widget.getClassName(STDMOD));__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['33']++;this._renderStdModSections();__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['34']++;this.after(HeaderChange,this._afterHeaderChange);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['35']++;this.after(BodyChange,this._afterBodyChange);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['36']++;this.after(FooterChange,this._afterFooterChange);},_renderStdModSections:function(){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['10']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['37']++;if(L.isValue(this.get(HEADER_CONTENT))){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['7'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['38']++;this._renderStdMod(STD_HEADER);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['7'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['39']++;if(L.isValue(this.get(BODY_CONTENT))){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['8'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['40']++;this._renderStdMod(STD_BODY);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['8'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['41']++;if(L.isValue(this.get(FOOTER_CONTENT))){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['9'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['42']++;this._renderStdMod(STD_FOOTER);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['9'][1]++;}},_bindUIStdMod:function(){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['11']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['43']++;this.after(FillHeightChange,this._afterFillHeightChange);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['44']++;this.after(HeightChange,this._fillHeight);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['45']++;this.after(ContentUpdate,this._fillHeight);},_afterHeaderChange:function(e){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['12']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['46']++;if(e.src!==UI){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['10'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['47']++;this._uiSetStdMod(STD_HEADER,e.newVal,e.stdModPosition);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['10'][1]++;}},_afterBodyChange:function(e){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['13']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['48']++;if(e.src!==UI){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['11'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['49']++;this._uiSetStdMod(STD_BODY,e.newVal,e.stdModPosition);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['11'][1]++;}},_afterFooterChange:function(e){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['14']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['50']++;if(e.src!==UI){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['12'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['51']++;this._uiSetStdMod(STD_FOOTER,e.newVal,e.stdModPosition);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['12'][1]++;}},_afterFillHeightChange:function(e){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['15']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['52']++;this._uiSetFillHeight(e.newVal);},_validateFillHeight:function(val){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['16']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['53']++;return(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['13'][0]++,!val)||(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['13'][1]++,val==StdMod.BODY)||(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['13'][2]++,val==StdMod.HEADER)||(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['13'][3]++,val==StdMod.FOOTER);},_uiSetFillHeight:function(fillSection){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['17']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['54']++;var fillNode=this.getStdModNode(fillSection);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['55']++;var currNode=this._currFillNode;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['56']++;if((__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['15'][0]++,currNode)&&(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['15'][1]++,fillNode!==currNode)){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['14'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['57']++;currNode.setStyle(HEIGHT,EMPTY);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['14'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['58']++;if(fillNode){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['16'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['59']++;this._currFillNode=fillNode;}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['16'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['60']++;this._fillHeight();},_fillHeight:function(){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['18']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['61']++;if(this.get(FILL_HEIGHT)){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['17'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['62']++;var height=this.get(HEIGHT);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['63']++;if((__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['19'][0]++,height!=EMPTY)&&(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['19'][1]++,height!=AUTO)){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['18'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['64']++;this.fillHeight(this.getStdModNode(this.get(FILL_HEIGHT)));}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['18'][1]++;}}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['17'][1]++;}},_uiSetStdMod:function(section,content,where){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['19']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['65']++;if(L.isValue(content)){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['20'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['66']++;var node=this.getStdModNode(section,true);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['67']++;this._addStdModContent(node,content,where);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['68']++;this.set(section+CONTENT_SUFFIX,this._getStdModContent(section),{src:UI});}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['20'][1]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['69']++;this._eraseStdMod(section);}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['70']++;this.fire(ContentUpdate);},_renderStdMod:function(section){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['20']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['71']++;var contentBox=this.get(CONTENT_BOX),sectionNode=this._findStdModSection(section);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['72']++;if(!sectionNode){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['21'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['73']++;sectionNode=this._getStdModTemplate(section);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['21'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['74']++;this._insertStdModSection(contentBox,section,sectionNode);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['75']++;this[section+NODE_SUFFIX]=sectionNode;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['76']++;return this[section+NODE_SUFFIX];},_eraseStdMod:function(section){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['21']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['77']++;var sectionNode=this.getStdModNode(section);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['78']++;if(sectionNode){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['22'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['79']++;sectionNode.remove(true);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['80']++;delete this[section+NODE_SUFFIX];}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['22'][1]++;}},_insertStdModSection:function(contentBox,section,sectionNode){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['22']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['81']++;var fc=contentBox.get(FIRST_CHILD);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['82']++;if((__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['24'][0]++,section===STD_FOOTER)||(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['24'][1]++,!fc)){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['23'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['83']++;contentBox.appendChild(sectionNode);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['23'][1]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['84']++;if(section===STD_HEADER){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['25'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['85']++;contentBox.insertBefore(sectionNode,fc);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['25'][1]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['86']++;var footer=this[STD_FOOTER+NODE_SUFFIX];__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['87']++;if(footer){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['26'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['88']++;contentBox.insertBefore(sectionNode,footer);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['26'][1]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['89']++;contentBox.appendChild(sectionNode);}}}},_getStdModTemplate:function(section){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['23']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['90']++;return Node.create(StdMod.TEMPLATES[section],this._stdModNode.get(OWNER_DOCUMENT));},_addStdModContent:function(node,children,where){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['24']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['91']++;switch(where){case StdMod.BEFORE:__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['27'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['92']++;where=0;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['93']++;break;case StdMod.AFTER:__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['27'][1]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['94']++;where=undefined;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['95']++;break;default:__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['27'][2]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['96']++;where=StdMod.REPLACE;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['97']++;node.insert(children,where);},_getPreciseHeight:function(node){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['25']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['98']++;var height=node?(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['28'][0]++,node.get(OFFSET_HEIGHT)):(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['28'][1]++,0),getBCR='getBoundingClientRect';__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['99']++;if((__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['30'][0]++,node)&&(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['30'][1]++,node.hasMethod(getBCR))){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['29'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['100']++;var preciseRegion=node.invoke(getBCR);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['101']++;if(preciseRegion){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['31'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['102']++;height=preciseRegion.bottom-preciseRegion.top;}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['31'][1]++;}}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['29'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['103']++;return height;},_findStdModSection:function(section){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['26']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['104']++;return this.get(CONTENT_BOX).one('> .'+StdMod.SECTION_CLASS_NAMES[section]);},_parseStdModHTML:function(section){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['27']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['105']++;var node=this._findStdModSection(section);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['106']++;if(node){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['32'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['107']++;if(!this._stdModParsed){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['33'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['108']++;this._stdModParsed={};__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['109']++;Y.before(this._applyStdModParsedConfig,this,APPLY_PARSED_CONFIG);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['33'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['110']++;this._stdModParsed[section+CONTENT_SUFFIX]=1;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['111']++;return node.get('innerHTML');}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['32'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['112']++;return null;},_applyStdModParsedConfig:function(node,cfg,parsedCfg){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['28']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['113']++;var parsed=this._stdModParsed;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['114']++;if(parsed){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['34'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['115']++;parsed[HEADER_CONTENT]=(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['35'][0]++,!(HEADER_CONTENT in cfg))&&(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['35'][1]++,HEADER_CONTENT in parsed);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['116']++;parsed[BODY_CONTENT]=(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['36'][0]++,!(BODY_CONTENT in cfg))&&(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['36'][1]++,BODY_CONTENT in parsed);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['117']++;parsed[FOOTER_CONTENT]=(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['37'][0]++,!(FOOTER_CONTENT in cfg))&&(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['37'][1]++,FOOTER_CONTENT in parsed);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['34'][1]++;}},_getStdModContent:function(section){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['29']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['118']++;return this[section+NODE_SUFFIX]?(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['38'][0]++,this[section+NODE_SUFFIX].get(CHILD_NODES)):(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['38'][1]++,null);},setStdModContent:function(section,content,where){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['30']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['119']++;this.set(section+CONTENT_SUFFIX,content,{stdModPosition:where});},getStdModNode:function(section,forceCreate){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['31']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['120']++;var node=(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['39'][0]++,this[section+NODE_SUFFIX])||(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['39'][1]++,null);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['121']++;if((__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['41'][0]++,!node)&&(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['41'][1]++,forceCreate)){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['40'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['122']++;node=this._renderStdMod(section);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['40'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['123']++;return node;},fillHeight:function(node){__cov_L0xpEI6PP2k8xsT6uqbWyQ.f['32']++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['124']++;if(node){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['42'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['125']++;var contentBox=this.get(CONTENT_BOX),stdModNodes=[this.headerNode,this.bodyNode,this.footerNode],stdModNode,cbContentHeight,filled=0,remaining=0,validNode=false;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['126']++;for(var i=0,l=stdModNodes.length;i<l;i++){__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['127']++;stdModNode=stdModNodes[i];__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['128']++;if(stdModNode){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['43'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['129']++;if(stdModNode!==node){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['44'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['130']++;filled+=this._getPreciseHeight(stdModNode);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['44'][1]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['131']++;validNode=true;}}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['43'][1]++;}}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['132']++;if(validNode){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['45'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['133']++;if((__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['47'][0]++,UA.ie)||(__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['47'][1]++,UA.opera)){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['46'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['134']++;node.set(OFFSET_HEIGHT,0);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['46'][1]++;}__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['135']++;cbContentHeight=contentBox.get(OFFSET_HEIGHT)-parseInt(contentBox.getComputedStyle('paddingTop'),10)-parseInt(contentBox.getComputedStyle('paddingBottom'),10)-parseInt(contentBox.getComputedStyle('borderBottomWidth'),10)-parseInt(contentBox.getComputedStyle('borderTopWidth'),10);__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['136']++;if(L.isNumber(cbContentHeight)){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['48'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['137']++;remaining=cbContentHeight-filled;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['138']++;if(remaining>=0){__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['49'][0]++;__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['139']++;node.set(OFFSET_HEIGHT,remaining);}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['49'][1]++;}}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['48'][1]++;}}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['45'][1]++;}}else{__cov_L0xpEI6PP2k8xsT6uqbWyQ.b['42'][1]++;}}};__cov_L0xpEI6PP2k8xsT6uqbWyQ.s['140']++;Y.WidgetStdMod=StdMod;},'@VERSION@',{'requires':['base-build','widget']});
