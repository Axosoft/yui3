if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/axis-category-base/axis-category-base.js']) {
   __coverage__['build/axis-category-base/axis-category-base.js'] = {"path":"build/axis-category-base/axis-category-base.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":30},"end":{"line":1,"column":49}}},"2":{"name":"CategoryImpl","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":23,"column":0}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":72,"column":17},"end":{"line":73,"column":4}}},"4":{"name":"(anonymous_4)","line":109,"loc":{"start":{"line":109,"column":22},"end":{"line":110,"column":4}}},"5":{"name":"(anonymous_5)","line":124,"loc":{"start":{"line":124,"column":18},"end":{"line":125,"column":4}}},"6":{"name":"(anonymous_6)","line":152,"loc":{"start":{"line":152,"column":18},"end":{"line":153,"column":4}}},"7":{"name":"(anonymous_7)","line":174,"loc":{"start":{"line":174,"column":24},"end":{"line":175,"column":4}}},"8":{"name":"(anonymous_8)","line":193,"loc":{"start":{"line":193,"column":24},"end":{"line":194,"column":4}}},"9":{"name":"(anonymous_9)","line":220,"loc":{"start":{"line":220,"column":19},"end":{"line":221,"column":4}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":247,"column":45}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":20}},"3":{"start":{"line":22,"column":0},"end":{"line":24,"column":1}},"4":{"start":{"line":26,"column":0},"end":{"line":26,"column":35}},"5":{"start":{"line":28,"column":0},"end":{"line":62,"column":2}},"6":{"start":{"line":64,"column":0},"end":{"line":230,"column":2}},"7":{"start":{"line":74,"column":8},"end":{"line":74,"column":19}},"8":{"start":{"line":111,"column":8},"end":{"line":111,"column":69}},"9":{"start":{"line":112,"column":8},"end":{"line":112,"column":30}},"10":{"start":{"line":126,"column":8},"end":{"line":130,"column":30}},"11":{"start":{"line":131,"column":8},"end":{"line":134,"column":9}},"12":{"start":{"line":133,"column":12},"end":{"line":133,"column":31}},"13":{"start":{"line":135,"column":8},"end":{"line":140,"column":9}},"14":{"start":{"line":137,"column":12},"end":{"line":137,"column":26}},"15":{"start":{"line":138,"column":12},"end":{"line":138,"column":26}},"16":{"start":{"line":139,"column":12},"end":{"line":139,"column":33}},"17":{"start":{"line":141,"column":8},"end":{"line":141,"column":36}},"18":{"start":{"line":142,"column":8},"end":{"line":142,"column":22}},"19":{"start":{"line":154,"column":8},"end":{"line":157,"column":9}},"20":{"start":{"line":156,"column":12},"end":{"line":156,"column":29}},"21":{"start":{"line":158,"column":8},"end":{"line":158,"column":33}},"22":{"start":{"line":159,"column":8},"end":{"line":162,"column":9}},"23":{"start":{"line":161,"column":12},"end":{"line":161,"column":31}},"24":{"start":{"line":163,"column":8},"end":{"line":163,"column":20}},"25":{"start":{"line":176,"column":8},"end":{"line":176,"column":39}},"26":{"start":{"line":195,"column":8},"end":{"line":197,"column":23}},"27":{"start":{"line":198,"column":8},"end":{"line":208,"column":9}},"28":{"start":{"line":200,"column":12},"end":{"line":200,"column":30}},"29":{"start":{"line":201,"column":12},"end":{"line":201,"column":38}},"30":{"start":{"line":202,"column":12},"end":{"line":202,"column":56}},"31":{"start":{"line":203,"column":12},"end":{"line":203,"column":45}},"32":{"start":{"line":207,"column":12},"end":{"line":207,"column":29}},"33":{"start":{"line":209,"column":8},"end":{"line":209,"column":26}},"34":{"start":{"line":222,"column":8},"end":{"line":223,"column":36}},"35":{"start":{"line":224,"column":8},"end":{"line":227,"column":9}},"36":{"start":{"line":226,"column":12},"end":{"line":226,"column":37}},"37":{"start":{"line":228,"column":8},"end":{"line":228,"column":21}},"38":{"start":{"line":232,"column":0},"end":{"line":232,"column":30}},"39":{"start":{"line":244,"column":0},"end":{"line":244,"column":85}}},"branchMap":{"1":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":131,"column":8}},{"start":{"line":131,"column":8},"end":{"line":131,"column":8}}]},"2":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"3":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":8}},{"start":{"line":159,"column":8},"end":{"line":159,"column":8}}]},"4":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":11},"end":{"line":159,"column":15}},{"start":{"line":159,"column":19},"end":{"line":159,"column":30}}]},"5":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":8}},{"start":{"line":198,"column":8},"end":{"line":198,"column":8}}]},"6":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":8},"end":{"line":224,"column":8}},{"start":{"line":224,"column":8},"end":{"line":224,"column":8}}]},"7":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":11},"end":{"line":224,"column":20}},{"start":{"line":224,"column":24},"end":{"line":224,"column":40}}]}},"code":["(function () { YUI.add('axis-category-base', function (Y, NAME) {","","/**\r"," * Provides functionality for the handling of category axis data for a chart.\r"," *\r"," * @module charts\r"," * @submodule axis-category-base\r"," */\r","var Y_Lang = Y.Lang;\r","\r","/**\r"," * CategoryImpl contains logic for managing category data. CategoryImpl is used by the following classes:\r"," * <ul>\r"," *      <li>{{#crossLink \"CategoryAxisBase\"}}{{/crossLink}}</li>\r"," *      <li>{{#crossLink \"CategoryAxis\"}}{{/crossLink}}</li>\r"," *  </ul>\r"," *\r"," * @class CategoryImpl\r"," * @constructor\r"," * @submodule axis-category-base\r"," */\r","function CategoryImpl()\r","{\r","}\r","\r","CategoryImpl.NAME = \"categoryImpl\";\r","\r","CategoryImpl.ATTRS = {\r","    /**\r","     * Pattern used by the `labelFunction` to format a label. The default `labelFunction` values for\r","     * `CategoryAxis` and `CategoryAxisBase` do not accept a format object. This value can be used by\r","     * a custom method.\r","     *\r","     * @attribute labelFormat\r","     * @type Object\r","     */\r","    labelFormat: {\r","        value: null\r","    },\r","\r","    /**\r","     * Determines whether and offset is automatically calculated for the edges of the axis.\r","     *\r","     * @attribute calculateEdgeOffset\r","     * @type Boolean\r","     */\r","    calculateEdgeOffset: {\r","        value: true\r","    }\r","\r","    /**\r","     * Method used for formatting a label. This attribute allows for the default label formatting method to overridden.\r","     * The method use would need to implement the arguments below and return a `String` or `HTMLElement`.\r","     * <dl>\r","     *      <dt>val</dt><dd>Label to be formatted. (`String`)</dd>\r","     *      <dt>format</dt><dd>Template for formatting label. (optional)</dd>\r","     * </dl>\r","     *\r","     * @attribute labelFunction\r","     * @type Function\r","     */\r","};\r","\r","CategoryImpl.prototype = {\r","    /**\r","     * Formats a label based on the axis type and optionally specified format.\r","     *\r","     * @method formatLabel\r","     * @param {Object} value\r","     * @return String\r","     */\r","    formatLabel: function(val)\r","    {\r","        return val;\r","    },\r","\r","    /**\r","     * Object storing key data.\r","     *\r","     * @property _indices\r","     * @private\r","     */\r","    _indices: null,\r","\r","    /**\r","     * Constant used to generate unique id.\r","     *\r","     * @property GUID\r","     * @type String\r","     * @private\r","     */\r","    GUID: \"yuicategoryaxis\",\r","\r","    /**\r","     * Type of data used in `Data`.\r","     *\r","     * @property _dataType\r","     * @readOnly\r","     * @private\r","     */\r","    _type: \"category\",\r","\r","    /**\r","     * Calculates the maximum and minimum values for the `Data`.\r","     *\r","     * @method _updateMinAndMax\r","     * @private\r","     */\r","    _updateMinAndMax: function()\r","    {\r","        this._dataMaximum = Math.max(this.get(\"data\").length - 1, 0);\r","        this._dataMinimum = 0;\r","    },\r","\r","    /**\r","     * Gets an array of values based on a key.\r","     *\r","     * @method _getKeyArray\r","     * @param {String} key Value key associated with the data array.\r","     * @param {Array} data Array in which the data resides.\r","     * @return Array\r","     * @private\r","     */\r","    _getKeyArray: function(key, data)\r","    {\r","        var i = 0,\r","            obj,\r","            keyArr = [],\r","            labels = [],\r","            len = data.length;\r","        if(!this._indices)\r","        {\r","            this._indices = {};\r","        }\r","        for(; i < len; ++i)\r","        {\r","            obj = data[i];\r","            keyArr[i] = i;\r","            labels[i] = obj[key];\r","        }\r","        this._indices[key] = keyArr;\r","        return labels;\r","    },\r","\r","    /**\r","     * Returns an array of values based on an identifier key.\r","     *\r","     * @method getDataByKey\r","     * @param {String} value value used to identify the array\r","     * @return Array\r","     */\r","    getDataByKey: function (value)\r","    {\r","        if(!this._indices)\r","        {\r","            this.get(\"keys\");\r","        }\r","        var keys = this._indices;\r","        if(keys && keys[value])\r","        {\r","            return keys[value];\r","        }\r","        return null;\r","    },\r","\r","    /**\r","     * Returns the total number of majorUnits that will appear on an axis.\r","     *\r","     * @method getTotalMajorUnits\r","     * @param {Object} majorUnit Object containing properties related to the majorUnit.\r","     * @param {Number} len Length of the axis.\r","     * @return Number\r","     */\r","    getTotalMajorUnits: function()\r","    {\r","        return this.get(\"data\").length;\r","    },\r","\r","    /**\r","     * Returns a coordinate corresponding to a data values.\r","     *\r","     * @method _getCoordFromValue\r","     * @param {Number} min The minimum for the axis.\r","     * @param {Number} max The maximum for the axis.\r","     * @param {Number} length The distance that the axis spans.\r","     * @param {Number} dataValue A value used to ascertain the coordinate.\r","     * @param {Number} offset Value in which to offset the coordinates.\r","     * @param {Boolean} reverse Indicates whether the coordinates should start from\r","     * the end of an axis. Only used in the numeric implementation.\r","     * @return Number\r","     * @private\r","     */\r","    _getCoordFromValue: function(min, max, length, dataValue, offset)\r","    {\r","        var range,\r","            multiplier,\r","            valuecoord;\r","        if(Y_Lang.isNumber(dataValue))\r","        {\r","            range = max - min;\r","            multiplier = length/range;\r","            valuecoord = (dataValue - min) * multiplier;\r","            valuecoord = offset + valuecoord;\r","        }\r","        else\r","        {\r","            valuecoord = NaN;\r","        }\r","        return valuecoord;\r","    },\r","\r","    /**\r","     * Returns a value based of a key value and an index.\r","     *\r","     * @method getKeyValueAt\r","     * @param {String} key value used to look up the correct array\r","     * @param {Number} index within the array\r","     * @return String\r","     */\r","    getKeyValueAt: function(key, index)\r","    {\r","        var value = NaN,\r","            keys = this.get(\"keys\");\r","        if(keys[key] && keys[key][index])\r","        {\r","            value = keys[key][index];\r","        }\r","        return value;\r","    }\r","};\r","\r","Y.CategoryImpl = CategoryImpl;\r","\r","/**\r"," * CategoryAxisBase manages category data for an axis.\r"," *\r"," * @class CategoryAxisBase\r"," * @constructor\r"," * @extends AxisBase\r"," * @uses CategoryImpl\r"," * @param {Object} config (optional) Configuration parameters.\r"," * @submodule axis-category-base\r"," */\r","Y.CategoryAxisBase = Y.Base.create(\"categoryAxisBase\", Y.AxisBase, [Y.CategoryImpl]);\r","","","}, '@VERSION@', {\"requires\": [\"axis-base\"]});","","}());"]};
}
var __cov_TfK6OFh2BYyMHxhA$Njz7g = __coverage__['build/axis-category-base/axis-category-base.js'];
__cov_TfK6OFh2BYyMHxhA$Njz7g.s['1']++;YUI.add('axis-category-base',function(Y,NAME){__cov_TfK6OFh2BYyMHxhA$Njz7g.f['1']++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['2']++;var Y_Lang=Y.Lang;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['3']++;function CategoryImpl(){__cov_TfK6OFh2BYyMHxhA$Njz7g.f['2']++;}__cov_TfK6OFh2BYyMHxhA$Njz7g.s['4']++;CategoryImpl.NAME='categoryImpl';__cov_TfK6OFh2BYyMHxhA$Njz7g.s['5']++;CategoryImpl.ATTRS={labelFormat:{value:null},calculateEdgeOffset:{value:true}};__cov_TfK6OFh2BYyMHxhA$Njz7g.s['6']++;CategoryImpl.prototype={formatLabel:function(val){__cov_TfK6OFh2BYyMHxhA$Njz7g.f['3']++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['7']++;return val;},_indices:null,GUID:'yuicategoryaxis',_type:'category',_updateMinAndMax:function(){__cov_TfK6OFh2BYyMHxhA$Njz7g.f['4']++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['8']++;this._dataMaximum=Math.max(this.get('data').length-1,0);__cov_TfK6OFh2BYyMHxhA$Njz7g.s['9']++;this._dataMinimum=0;},_getKeyArray:function(key,data){__cov_TfK6OFh2BYyMHxhA$Njz7g.f['5']++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['10']++;var i=0,obj,keyArr=[],labels=[],len=data.length;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['11']++;if(!this._indices){__cov_TfK6OFh2BYyMHxhA$Njz7g.b['1'][0]++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['12']++;this._indices={};}else{__cov_TfK6OFh2BYyMHxhA$Njz7g.b['1'][1]++;}__cov_TfK6OFh2BYyMHxhA$Njz7g.s['13']++;for(;i<len;++i){__cov_TfK6OFh2BYyMHxhA$Njz7g.s['14']++;obj=data[i];__cov_TfK6OFh2BYyMHxhA$Njz7g.s['15']++;keyArr[i]=i;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['16']++;labels[i]=obj[key];}__cov_TfK6OFh2BYyMHxhA$Njz7g.s['17']++;this._indices[key]=keyArr;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['18']++;return labels;},getDataByKey:function(value){__cov_TfK6OFh2BYyMHxhA$Njz7g.f['6']++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['19']++;if(!this._indices){__cov_TfK6OFh2BYyMHxhA$Njz7g.b['2'][0]++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['20']++;this.get('keys');}else{__cov_TfK6OFh2BYyMHxhA$Njz7g.b['2'][1]++;}__cov_TfK6OFh2BYyMHxhA$Njz7g.s['21']++;var keys=this._indices;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['22']++;if((__cov_TfK6OFh2BYyMHxhA$Njz7g.b['4'][0]++,keys)&&(__cov_TfK6OFh2BYyMHxhA$Njz7g.b['4'][1]++,keys[value])){__cov_TfK6OFh2BYyMHxhA$Njz7g.b['3'][0]++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['23']++;return keys[value];}else{__cov_TfK6OFh2BYyMHxhA$Njz7g.b['3'][1]++;}__cov_TfK6OFh2BYyMHxhA$Njz7g.s['24']++;return null;},getTotalMajorUnits:function(){__cov_TfK6OFh2BYyMHxhA$Njz7g.f['7']++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['25']++;return this.get('data').length;},_getCoordFromValue:function(min,max,length,dataValue,offset){__cov_TfK6OFh2BYyMHxhA$Njz7g.f['8']++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['26']++;var range,multiplier,valuecoord;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['27']++;if(Y_Lang.isNumber(dataValue)){__cov_TfK6OFh2BYyMHxhA$Njz7g.b['5'][0]++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['28']++;range=max-min;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['29']++;multiplier=length/range;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['30']++;valuecoord=(dataValue-min)*multiplier;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['31']++;valuecoord=offset+valuecoord;}else{__cov_TfK6OFh2BYyMHxhA$Njz7g.b['5'][1]++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['32']++;valuecoord=NaN;}__cov_TfK6OFh2BYyMHxhA$Njz7g.s['33']++;return valuecoord;},getKeyValueAt:function(key,index){__cov_TfK6OFh2BYyMHxhA$Njz7g.f['9']++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['34']++;var value=NaN,keys=this.get('keys');__cov_TfK6OFh2BYyMHxhA$Njz7g.s['35']++;if((__cov_TfK6OFh2BYyMHxhA$Njz7g.b['7'][0]++,keys[key])&&(__cov_TfK6OFh2BYyMHxhA$Njz7g.b['7'][1]++,keys[key][index])){__cov_TfK6OFh2BYyMHxhA$Njz7g.b['6'][0]++;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['36']++;value=keys[key][index];}else{__cov_TfK6OFh2BYyMHxhA$Njz7g.b['6'][1]++;}__cov_TfK6OFh2BYyMHxhA$Njz7g.s['37']++;return value;}};__cov_TfK6OFh2BYyMHxhA$Njz7g.s['38']++;Y.CategoryImpl=CategoryImpl;__cov_TfK6OFh2BYyMHxhA$Njz7g.s['39']++;Y.CategoryAxisBase=Y.Base.create('categoryAxisBase',Y.AxisBase,[Y.CategoryImpl]);},'@VERSION@',{'requires':['axis-base']});
